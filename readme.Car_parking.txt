Car_parking

คุณสมบัติของระบบ

ตรวจจับและนับจำนวนยานพาหนะที่อยู่ในพื้นที่จอดรถจากวิดีโอ

รองรับการกำหนด ROI (Region of Interest) ได้สูงสุด 3 พื้นที่

ใช้ YOLO เป็นโมเดลหลักในการตรวจจับยานพาหนะ

ใช้ OpenCV ในการแสดงผลและวิเคราะห์วิดีโอ

มีระบบ track history เพื่อติดตามยานพาหนะที่ถูกบดบังชั่วคราว

บันทึกค่าพื้นที่ ROI ลงไฟล์ JSON เพื่อให้สามารถใช้งานต่อเนื่องได้

การตั้งค่าพื้นฐาน

วิดีโอที่ใช้: สามารถเปลี่ยนแปลงพาธไฟล์วิดีโอได้ในตัวแปร VIDEO_PATH

โมเดลที่ใช้: สามารถเปลี่ยนแปลงพาธไฟล์โมเดลได้ในตัวแปร MODEL_PATH

ข้อมูลตำแหน่งกล้อง: ตั้งค่าชื่อกล้องและตำแหน่งในตัวแปร CAMERA_NAME และ LOCATION_NAME

การกำหนด ROI

เมื่อเปิดโปรแกรม สามารถใช้เมาส์คลิกเพื่อกำหนด ROI ได้

สามารถกำหนดได้สูงสุด 3 พื้นที่ ROI

กด s เพื่อบันทึกค่าพื้นที่ ROI

กด e เพื่อล้างค่าและเริ่มกำหนด ROI ใหม่

กด q เพื่อออกจากโปรแกรม

/car_parking_project
│── vehicle_counter.py  # โค้ดหลักของโปรแกรม
│── model/yolov5mu.pt   # ไฟล์โมเดล YOLO
│── video/input.mp4     # ไฟล์วิดีโอที่ใช้
│── roi/Parking_roi_points.json   # ค่าพื้นที่ ROI ที่บันทึกไว้
│── roi/Parking_roi_points_2.json # ROI จุดที่ 2
│── roi/Parking_roi_points_3.json # ROI จุดที่ 3

สามารถปรับค่า confidence_threshold เพื่อลดการตรวจจับผิดพลาดของโมเดล

รองรับการตรวจจับเฉพาะยานพาหนะที่กำหนด เช่น car, bus, truck

ใช้ track history เพื่อติดตามวัตถุที่หายไปจากเฟรมชั่วคราว
